version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-reverse-proxy
    ports:
      - "80:80"  # HTTP on host (add 443:443 for HTTPS later if needed)
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro  # Mount your Nginx config
      # For HTTPS, add: - ./letsencrypt:/etc/letsencrypt  (if using Certbot)
    networks:
      - sail
    depends_on:
      - laravel.test  # Wait for the main project
      # Add more depends_on for additional projects
    restart: always

  laravel.test:  # Your main Laravel project, for zeusfly.ru
    build:
      context: './docker/8.4'
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.4/app'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    # Remove ports for 80 to not expose on host; use expose for internal access
    expose:
      - "80"  # Internal port for the app
    ports:
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'  # Keep Vite if needed, or remove if not
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - mysql
      - redis
      - meilisearch
      - mailpit
      - selenium

  # Example additional project: opus-project for opus.zeusfly.ru
  # Duplicate this block for each new project, change names/paths/images as needed
  # Assume it's another Laravel instance; adjust if different
  opus-project:
    build:
      context: './path/to/opus/docker/8.4'  # Change to the path of the new project
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: 'sail-8.4/opus'  # Unique image name
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    expose:
      - "80"  # Internal port
    # ports: No external ports needed
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD_OPUS}'  # Adjust if needed
    volumes:
      - './path/to/opus:/var/www/html'  # Path to the new project's code
    networks:
      - sail
    depends_on:
      # Add dependencies if the new project needs them (e.g., its own DB?)
      - mysql  # Or duplicate DB services if separate instances needed
      - redis
      # etc.

  # Other services remain the same
  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_EXTRA_OPTIONS: '${MYSQL_EXTRA_OPTIONS}'
    volumes:
      - 'sail-mysql:/var/lib/mysql'
      - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${DB_PASSWORD}'
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'sail-redis:/data'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  meilisearch:
    image: 'getmeili/meilisearch:latest'
    ports:
      - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    environment:
      MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
    volumes:
      - 'sail-meilisearch:/meili_data'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - wget
        - '--no-verbose'
        - '--spider'
        - 'http://127.0.0.1:7700/health'
      retries: 3
      timeout: 5s

  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
    networks:
      - sail

  selenium:
    image: selenium/standalone-chromium
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    volumes:
      - '/dev/shm:/dev/shm'
    networks:
      - sail

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
      - '8080:80'
    environment:
      PMA_HOST: mysql
      PMA_USER: ${DB_USERNAME}
      PMA_PASSWORD: ${DB_PASSWORD}
    networks:
      - sail
    depends_on:
      - mysql

networks:
  sail:
    driver: bridge

volumes:
  sail-mysql:
    driver: local
  sail-redis:
    driver: local
  sail-meilisearch:
    driver: local
